/*
Must select proper classes for the menu and container. Select based on the orientation of the items:
 horizontal menu, top, evenly-spaced        -> .viewcontrol-menu-hmc  +  .viewcontrol-cont-vt
 horizontal menu, top, right-aligned        -> .viewcontrol-menu-hmr  +  .viewcontrol-cont-vt
 horizontal menu, top, left-aligned         -> .viewcontrol-menu-hml  +  .viewcontrol-cont-vt
 horizontal menu, bottom, evenly-spaced     -> .viewcontrol-menu-hmc  +  .viewcontrol-cont-vb
 horizontal menu, bottom, right-aligned     -> .viewcontrol-menu-hmr  +  .viewcontrol-cont-vb
 horizontal menu, bottom, left-aligned      -> .viewcontrol-menu-hml  +  .viewcontrol-cont-vb
 vertical menu, left side, top-aligned      -> .viewcontrol-menu-vmt  +  .viewcontrol-cont-hl
 vertical menu, left side , bottom-aligned  -> .viewcontrol-menu-vmb  +  .viewcontrol-cont-hl
 vertical menu, right side, top-aligned     -> .viewcontrol-menu-vmt  +  .viewcontrol-cont-hr
 vertical menu, right side , bottom-aligned -> .viewcontrol-menu-vmb  +  .viewcontrol-cont-hr

 In order for vertical sizing to work properly the outer-most container MUST have a definate height set, a percentage will not do. A calculation based on 100vh tends to be most reliable
 #view-level-1{
  height: calc(100vh - 34px);
 }
*/


/*  Tab menu standard top */
.viewcontrol-cont{
  display:flex;
  flex-direction:column;
  height: calc(100% - 36px);
  width: 100%;
}
.viewcontrol-menu{
  display:flex;
  flex-grow: 1;
}
.viewcontrol-menubox{
  flex-grow: 1;
}
.viewcontrol-quick-actions{
  flex-shrink: 1;
  justify-content:flex-end;
}
.viewcontrol-menu>div{
  display: flex;
}
.viewcontrol-menu-item{
  flex-grow:1;
  text-align:center;
  padding:5px;
  background-color: var(--background-dark);
  color: var(--text-light);
  position: relative;
}
.viewcontrol-menu-item:hover{
  opacity: .4;
  cursor:pointer;
}
.viewcontrol-port{
  width:100%;
  height:100%;
}
.viewcontrol-port-item{
  display:none;
  height: 100%;
  width: 100%;
}
.viewcontrol-port-selected{
  display:contents;
}
.viewcontrol-menu-selected{
  background-color: var(--BEE-blue);
}
.viewcontrol-menu-selected:hover{
  opacity: 1;
}


/* CONTAINER */
.viewcontrol-cont-vb{
  flex-direction:column-reverse;
  flex-grow: 1;
}

.viewcontrol-cont-hr{
  flex-direction:row-reverse;
}
.viewcontrol-cont-hl{
  flex-direction:row;
}
/*////////////////////////*/


/* MENUS */
[class*='viewcontrol-menu-vm']>div:nth-child(1){
  flex-direction:column;
  flex-grow: 1;
  background-color: var(--background-dark);
}
[class*='viewcontrol-menu-hm']>div:nth-child(1){
  flex-direction:row;
  flex-grow: 0;
}
[class*='viewcontrol-menu-hm']>div:nth-child(1)>.viewcontrol-menu-item{
  flex-grow:unset;
  min-width: 200px;
}
.viewcontrol-menu-hmr{
  justify-content:flex-end;
}
.viewcontrol-menu-hmr>div{
  justify-content:flex-end;
}
.viewcontrol-menu-hml>div:nth-child(1){
  justify-content:flex-start;
}
.viewcontrol-menu-vmt>div:nth-child(1){
  justify-content:flex-start;
}
.viewcontrol-menu-vmb>div{
  justify-content:flex-end;
}
.viewcontrol-menu-vmb>div>.viewcontrol-menu-item,.viewcontrol-menu-vmt>div>.viewcontrol-menu-item{
  flex-grow:unset;
  min-width: 100px;
}

.viewcontrol-menu-hml,.viewcontrol-menu-hmr{
  border-bottom: 2px solid var(--BEE-blue);
}
.viewcontrol-menu-hml>div>.viewcontrol-menu-item,
.viewcontrol-menu-hmr>div>.viewcontrol-menu-item{
  border-radius: 10px 10px 0px 0px;
}
/*////////////////////////*/


/* CLOSE BUTTON */
.viewcontrol-port-close{
  display: none;
  position: absolute;
  right: 5px;
  top: 5px;
  width: 10px;
  filter: brightness(0%) invert();
}
.viewcontrol-menu-item:hover>.viewcontrol-port-close{
  display: block;
}
.viewcontrol-port-close:hover{
  filter: none;
}

/* Printing */
.viewcontrol-print-header{
  margin: 5px 0px;
  display:none;
}
@media print{

}
